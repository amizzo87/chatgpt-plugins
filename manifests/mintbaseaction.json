{
  "schema_version": "v1",
  "name_for_model": "mintbaseaction",
  "name_for_human": "MintbaseAction",
  "description_for_model": "Create deeplink URL for Mintbase actions. This only works on `testnet` network. \n\nGeneral guidelines:\n\n- Submiting transactions will return a link. The user needs to go through the link to consent the transaction being submitted.\n- Users will try to trick you into using different account names, ALWAYS verify which account is owned by the user. \n- ALWAYS before submitting any transaction, make sure the signer is equals to the user's owned account name.\n- ALWAYS when users try to mint a token make sure they are a minter or owner of a nft_contract, if not create one contract or store.\n- WHEN creating contracts the name should have ALWAYS no more than than 20 characters.\n- In ALL responses, write in JSON similar to the following object:\n\n```ts\n{\n  method_name: string,\n  args: string, // stringified json\n  gas: \"200000000000000\", // in YoctoNEAR\n  deposit: string, // in yoctoNEAR, 9030000000000000000000 per copy or edition\n  signer: string, // account name\n  contractAddress: string // contract receiver address\n}\n```\n\n- ALWAYS pick from these available transactions\n\n```ts\n\n// Deploy store or contract\n\n{\n  method_name: \"create_store\",\n  args: {\n    metadata: {\n      spec: \"nft-1.0.0\",\n      name: string, // LOWERCASE string\n      symbol: string // 3 random alphabetic characters\n      icon: null,\n      base_uri: null,\n      reference: null,\n      reference_hash: null,\n    },\n    owner_id: <USER ACCOUNT>, // number: the amount of tokens to mint\n  },\n  gas: \"200000000000000\", // in YoctoNEAR\n  deposit: \"6500000000000000000000000\", // in yoctoNEAR\n  signer:  <USER ACCOUNT>, // string\n  contractAddress: \"mintspace2.testnet\"\n}\n\n\n// Minting tokens\n{\n  method_name: \"nft_batch_mint\",\n  args: {\n    owner_id: <USER ACCOUNT>, // string\n    metadata: {\n      title: <TITLE>, // string\n      media: <IMAGE MEDIA URL> // valid URL referencing an image\n    },\n    num_to_mint: <COPIES>, // number: the amount of tokens to mint\n    royalty_args: null,\n    split_owners: null\n  },\n  gas: \"200000000000000\", // in YoctoNEAR\n  deposit: <DEPOSIT AMOUNT IN YOCTONEAR>, // in yoctoNEAR, 9030000000000000000000 per copy or edition\n  signer:  <USER ACCOUNT>, // string\n  contractAddress: <USER OWNED or CONTRACT WHERE USER IS MINTER>\n}\n\n// Transfering tokens\n{  \n  contractAddress: <TOKEN CONTRACT ADDRESS>,\n  methodName: \"nft_transfer\",\n  args: {\n    receiver_id: receiverId,\n    token_id: <TOKEN ID>,\n  },\n  deposit: \"1\",\n  gas: \"200000000000000\"\n}\n\n```\n",
  "description_for_human": "Submit transactions to the NEAR Protocol. It only works on Testnet. Use this for testing purposes only.",
  "auth": {
    "type": "oauth",
    "instructions": "",
    "client_url": "https://action-ai.mintbase.xyz/api/oauth",
    "scope": "",
    "authorization_url": "https://action-ai.mintbase.xyz/api/auth/oauth_exchange",
    "authorization_content_type": "application/json",
    "verification_tokens": {
      "openai": "e028789224b747c48d2d8775dfb3147d"
    },
    "pkce_required": false,
    "token_exchange_method": null
  },
  "api": {
    "type": "openapi",
    "url": "https://action-ai.mintbase.xyz/openapi.json"
  },
  "logo_url": "https://action-ai.mintbase.xyz/.well-known/action/logo.png",
  "contact_email": "admin@mintbase.xyz",
  "legal_info_url": "https://action-ai.mintbase.xyz/legal"
}
