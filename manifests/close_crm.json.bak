{"schema_version":"v1","name_for_model":"close_crm","name_for_human":"Close CRM","description_for_model":"Not all leads are customers, accounts, or potential contacts, always look for matching smart views and lead statuses when unclear terms are used.\n\n`lead` objects may contain multiple `contact`, `opportunity`, `task`, `activity`, and `address` objects. `contact` objects do not have addresses. Activities may have different types, such as `call`, `note`, `meeting`, `sms`, `email`.\n\nAny object contains the following fields: date_created, date_updated, created_by, updated_by.\n\n`lead` objects contain the following fields: name, status_id, url.\n\n`contact` objects contain the following fields: name, title, phone, email, url.\n\n`address` objects contain the following fields: type, address_1, address_2, city, state, zipcode, country. Wrap addresses in a single related `address` query.\n\n`opportunity` objects contain the following fields: status_id, status_type (`active`, `won`, or `lost`), close_date, confidence, value, period, note.\n\n`task` objects contain the following fields: type, assigned_to, is_complete, text, date. Tasks are meant to be completed by sales people and not by leads.\n\nAll activities contain the following fields: user_or_group_id, contact_id, type.\n\n`call` activities also contain: call_method, disposition, cost, duration (seconds), direction, local_phone, remote_phone.\n\n`email` activities also contain: status, direction, envelope, subject, body_text, sequence_id, sequence_name.\n\n`meeting` activities also contain: title, location, source, status, attendees, duration, starts_at, ends_at, is_recurring.\n\n`note` activities also contain: note\n\n`sms` activities also contain: status, direction, local_phone, remote_phone, text, attachments.\n\n`custom_activity` contain `custom_activity_type_id`, `status` (`draft` or `published`). To search custom activities, use a `custom_activity` related query and filter by `custom_activity_type_id`, and add any further queries such as a `text` query inside the related query. Custom activities do not include activity types specified above.\n\nAll dates in ISO format. Opportunity values in cents.\n\nSearch for activity counts on leads using \"num_\" + plural, e.g. \"num_calls\", \"num_incoming_calls\", \"num_outgoing_calls\" \"num_emails\", \"num_received_emails\", \"num_sent_emails\".\n\nSearch for computed fields on leads using \"first\" or \"last\" prefix, the object type, and then the field name, e.g.  \"last_call_created\".\n\nTo search for leads that haven't been contacted recently, use a negated `related` query with `related_types` set to `call`, `sms`, and `email`.  The related query should have a `gt` `date_created` clause and a `field` query with `values` for each user or group ID, if given.\n\nTo search for multiple status values, put them all in a single `values` param.\n\nWhen filtering by multiple users that are part of a group, you must use the group ID inside the search query instead of the user ID.\n\nSearch for contact info on leads using \"num_email_addresses\", \"num_phone_numbers\" etc.\n\nYou must strictly follow the field schema for search queries.\n\nIf the user searches for multiple fields related to the same object, you must wrap all the conditions in the same related query, unless the user explicitly states otherwise.\n\nTo search for activities, use their type name, such as `call`. Do not search for `activity` directly.\n\nNever use user names, smart view names, status names, or custom field names in queries, always use IDs. Do not alter, prefix, or invent IDs, field names, or field values. Do not add 'custom.' prefix to IDs. Do not use IDs you have not previously seen. Do not expose IDs to the user unless they ask for it.\n\nAlways use the info endpoints to fetch IDs for fields or terms not explicitly mentioned in the prompt before performing a search. Always use the info endpoints to fetch information about the org, users, statuses, smart views, and custom fields before performing a search.\n\nTo search for `won`, `lost`, or `active` opportunities, use the `status_type` field directly.\n\nIf a search returns a `results_url`, you must return it to the user, even if there are no results.\n\nIf you receive an error about an invalid ID, refetch the corresponding info endpoint and use the correct ID.\n\nDon't explain the steps you're performing.\n\nWhen asked to summarize a lead, or create content like drafting an email for a lead, use the leadSummary and leadActivitySummary endpoints, and personalize the content.\n","description_for_human":"Access your Close CRM data. Understand your leads, get deeper insights, and make them actionable.","auth":{"type":"oauth","instructions":"","client_url":"https://app.close.com/oauth2/authorize/","scope":"all.full_access offline_access","authorization_url":"https://services.close.com/oauth2/token/","authorization_content_type":"application/x-www-form-urlencoded","verification_tokens":{"openai":"2f43c1bc061b49d18e96f509f3d7ec86"},"pkce_required":false},"api":{"type":"openapi","url":"https://services.close.com/api/v1/chatgpt/openapi.yaml"},"logo_url":"https://app.close.com/chatgpt-plugin-logo.png","contact_email":"support@close.com","legal_info_url":"https://www.close.com/tos","is_authenticated":false}