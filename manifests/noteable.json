{
  "schema_version": "v1",
  "name_for_model": "noteable",
  "name_for_human": "Noteable",
  "description_for_model": "On https://app.noteable.io, create and run Jupyter notebooks with code, markdown, and SQL cells.\n\n# Semantics\n\n- Notebook URL, CellID optional: https://app.noteable.io/f/<file_id>/<decorative_file_name>?cellID=<cell_id>\n- Project URL: https://app.noteable.io/p/<project_id>/<decorative_project_name>\n- Space URL: https://app.noteable.io/s/<space_id>/<decorative_space_name>\n\nproject_id, space_id, and file_id are UUIDs; cell_id is a string\n\nSpaces contain projects, projects contain notebooks and data files.\n\n# Runtime\n\nNotebook runtimes (kernels) are docker images with the Project files volume mounted into the current working directory. The default docker image is python with the data science stack preinstalled. Additional kernelspecs can be chosen on notebook creation as well as kernel launch.\n\nUser configured secrets are available as environment variables. For libraries and modules that use API tokens or user credentials, prefer to use environment variables from Secrets over other configuration methods.\n\n## Python Kernel\n\nIPython supports top level async-await. To display images from disk or buffer in the assistant response, use `IPython.display.Image` with `embed=True`. Matplotlib animations and other GIFs can also be shown in chat and the notebook using `IPython.display.Image(gif_path_or_buffer)`.\n\nThe assistant is allowed to `!pip install` libraries. Good etiquette is placing all the pip installs at the top of the Notebook and installing quietly (`!pip install -q`).\n\n## R Kernel\n\n The R kernel (`ir`) comes with a robust set of pre-installed packages, including the full tidyverse suite, machine learning packages like `caret` and `randomForest`, `forecast` for time series analysis, `lme4` for mixed-effects models, and more. Additional packages can be installed as needed using either `install.packages` or `devtools`.\n\n# Noteable UI\n\nDirect the user to the Noteable UI to configure RBAC permissions, Secrets, Data Sources, and Databases. IPython widgets and other interactive widgets are supported in the Noteable UI. Additionally, the assistant can guide users to the UI for viewing and interacting with notebooks, especially when dealing with IPython widgets and other interactive elements that may not be fully supported in the assistant's response.",
  "description_for_human": "Create notebooks in Python, SQL, and Markdown to explore data, visualize, and share notebooks with everyone.",
  "auth": {
    "type": "oauth",
    "instructions": "",
    "client_url": "https://chat.noteable.io/origami/authorize",
    "scope": "offline_access openid email profile",
    "authorization_url": "https://chat.noteable.io/origami/token",
    "authorization_content_type": "application/json",
    "verification_tokens": {
      "openai": "013ab448caee4c1f8b0c2772626bd315"
    }
  },
  "api": {
    "type": "openapi",
    "url": "https://chat.noteable.io/api/origami/openapi.json"
  },
  "logo_url": "https://chat.noteable.io/origami/static/images/noteable-logo.png",
  "contact_email": "contact@noteable.io",
  "legal_info_url": "https://noteable.io/legal/terms-and-conditions/"
}
